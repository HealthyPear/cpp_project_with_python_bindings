[build-system]
requires = ["scikit-build-core", "nanobind"]
build-backend = "scikit_build_core.build"

[project]
name = "my-package"
authors = [{ name = "First Last", email = "first.last@whatever.com" }]
description = "My awesome package"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["one", "two"]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 1 - Planning",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = []
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/username/my_package"

[project.optional-dependencies]
dev = ["pre-commit", "ruff", "my_package[tests]", "my_package[docs]"]

tests = ["pytest"]

docs = [
    "sphinx",
    "breathe",
    "exhale>=0.3.7",
    "nanobind-stubgen",
    "pydata-sphinx-theme",
    "rstcheck[sphinx]",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinxcontrib-towncrier",
    "sphinx-autoapi>=3.0.0",
    "tomli;python_version<'3.11'",
]

[tool.setuptools_scm]
write_to = "src/my_package/_version.py"

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"
cmake.verbose = true
logging.level = "INFO"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["src/my_package/_version.py"]
# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

# Run pytest to ensure that the package was correctly built
test-command = "pytest {project}/tests"
test-requires = "pytest"

# Needed for full C++17 support
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"
